name: AI Draft Smoke
on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - ".github/workflows/ai-draft-smoke.yml"
      - "wp-content/themes/ai-news-hub/inc/ai-research.php"
      - "**/*.php"
      - "style.css"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Docker network
        run: docker network create wpnet

      - name: Start MySQL
        run: |
          docker run -d --name mysql --network wpnet \
            -e MYSQL_DATABASE=wp -e MYSQL_USER=wp -e MYSQL_PASSWORD=wp -e MYSQL_ROOT_PASSWORD=root \
            -p 3306:3306 mysql:8
          for i in {1..60}; do
            docker exec mysql sh -lc 'mysqladmin ping -h 127.0.0.1 -uroot -proot >/dev/null 2>&1' && break
            echo "Waiting for MySQL container..."; sleep 2
          done

      - name: Start WordPress
        run: |
          docker run -d --name wp \
            --network wpnet \
            -e WORDPRESS_DB_HOST=mysql:3306 \
            -e WORDPRESS_DB_USER=wp \
            -e WORDPRESS_DB_PASSWORD=wp \
            -e WORDPRESS_DB_NAME=wp \
            -p 8080:80 wordpress:php8.2-apache

      - name: Prepare WordPress files
        run: |
          docker stop wp
          curl -sSL https://wordpress.org/latest.zip -o /tmp/wp.zip
          rm -rf /tmp/wordpress && unzip -q /tmp/wp.zip -d /tmp
          docker cp /tmp/wordpress/. wp:/var/www/html/
          docker start wp

      - name: Install WP-CLI and core (idempotent)
        run: |
          curl -sS -L https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar -o /tmp/wp-cli.phar
          docker cp /tmp/wp-cli.phar wp:/usr/local/bin/wp
          docker exec wp bash -lc 'chmod +x /usr/local/bin/wp && /usr/local/bin/wp --version || true'
          docker exec wp bash -lc '
            set -e
            for i in {1..60}; do
              mysqladmin ping -h mysql -P 3306 -u wp -pwp >/dev/null 2>&1 && break
              echo "Waiting for MySQL (mysql:3306)..."; sleep 2
            done
            WP="/usr/local/bin/wp --allow-root --path=/var/www/html"
            test -f /var/www/html/wp-config.php || $WP config create --dbname=wp --dbuser=wp --dbpass=wp --dbhost=mysql:3306
            $WP db create || true
            $WP core is-installed || $WP core install --url=http://localhost:8080 --title="CI Site" --admin_user=admin --admin_password=admin --admin_email=admin@example.com --skip-email
          '

      - name: Copy theme into container (repo root -> ai-news-hub)
        run: |
          docker exec wp bash -lc 'rm -rf /var/www/html/wp-content/themes/ai-news-hub'
          docker cp . wp:/var/www/html/wp-content/themes/ai-news-hub

      - name: Activate theme
        run: docker exec wp /usr/local/bin/wp theme activate ai-news-hub --allow-root --path=/var/www/html

      - name: Register Articles CPT via mu-plugin
        run: |
          docker exec wp /bin/bash -lc 'mkdir -p /var/www/html/wp-content/mu-plugins && cat >/var/www/html/wp-content/mu-plugins/ai-news-hub-cpt.php <<PHP
          <?php
          add_action("init", function () {
            register_post_type("article", array(
              "labels" => array("name" => "Articles","singular_name" => "Article"),
              "public" => true,
              "has_archive" => true,
              "show_in_rest" => true,
              "rest_base" => "articles",
              "supports" => array("title","editor","excerpt","thumbnail"),
              "taxonomies" => array("post_tag"),
              "rewrite" => array("slug" => "articles"),
            ));
          });
          PHP'

      - name: Flush permalinks
        run: |
          docker exec wp /usr/local/bin/wp rewrite structure '/%postname%/' --hard --allow-root --path=/var/www/html
          docker exec wp /usr/local/bin/wp rewrite flush --hard --allow-root --path=/var/www/html

      - name: Create sample Article
        run: |
          docker exec wp /usr/local/bin/wp post create \
            --post_type=article \
            --post_title="CI Sample" \
            --post_status=publish \
            --allow-root --path=/var/www/html

      - name: Start Apache and wait
        run: |
          docker exec wp bash -lc 'apache2ctl -k start'
          for i in {1..120}; do
            code=$(curl -s -o /var/tmp/out -w "%{http_code}" http://localhost:8080/ || true)
            [ "$code" = "200" ] || [ "$code" = "302" ] && echo "Apache ready ($code)" && break
            echo "Waiting for Apache... HTTP $code"; sleep 1
          done

      - name: AI draft smoke (only if key provided)
        env:
          AINEWS_OPENAI_API_KEY: ${{ secrets.AINEWS_OPENAI_API_KEY }}
        run: |
          if [ -n "$AINEWS_OPENAI_API_KEY" ]; then
            docker exec -e AINEWS_OPENAI_API_KEY="$AINEWS_OPENAI_API_KEY" wp bash -lc "wp ai-research --topic='AI trends in education' --path=/var/www/html --allow-root"
          else
            echo "No API key secret set; skipping AI draft."
          fi
          docker exec wp /usr/local/bin/wp post list --post_type=article --format=ids --allow-root --path=/var/www/html | grep -q .
